# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- Production

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  project: '**/Aptacode.Geometry.csproj'
  project2: '**/Aptacode.Geometry.Blazor.csproj'
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
steps:

- task: UseDotNet@2
  displayName: 'Use .NET 5'
  inputs:
    version: 5.x

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: '$(project)'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: '$(project2)'
    
- task: DotNetCoreCLI@2
  displayName: "Pack"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '$(project)'
    nobuild: true
    
- task: DotNetCoreCLI@2
  displayName: "Pack"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '$(project2)'
    nobuild: true

- task: NuGetCommand@2
  displayName: 'Push'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget.org' 
    allowPackageConflicts: true