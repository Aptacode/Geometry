@using Aptacode.Geometry.Blazor.Utilities
@inherits SceneViewBase
<svg width="@(ViewModel.Size.X)" height="@(ViewModel.Size.Y)">
    <defs>
        <pattern id="tenthGrid" width="@Constants.Scale" height="@Constants.Scale" patternUnits="userSpaceOnUse">
            <path d="M @Constants.Scale 0 L 0 0 0 @Constants.Scale" fill="none" stroke="silver" stroke-width="1"/>
        </pattern>
        <pattern id="grid" width="@(Constants.Scale * 4)" height="@(Constants.Scale * 4)" patternUnits="userSpaceOnUse">
            <rect width="@(Constants.Scale * 4)" height="@(Constants.Scale * 4)" fill="url(#tenthGrid)"/>
            <path d="M @(Constants.Scale * 4) 0 L 0 0 0 @(Constants.Scale * 4)" fill="none" stroke="gray" stroke-width="1"/>
        </pattern>
    </defs>
    <rect width="100%" height="100%" fill="url(#grid)"/>

    @foreach (var component in ViewModel.Components)
    {
        switch (component)
        {
            case RectangleViewModel rectangle:
                <RectangleView ViewModel="rectangle" @key="rectangle.Id"/>
                break;
            case EllipseViewModel ellipse:
                <EllipseView ViewModel="ellipse" @key="ellipse.Id"/>
                break;
            case PointViewModel point:
                <PointView ViewModel="point" @key="point.Id"/>
                break;
            case PolygonViewModel polygon:
                <PolygonView ViewModel="polygon" @key="polygon.Id"/>
                break;
            case PolylineViewModel polyline:
                <PolylineView ViewModel="polyline" @key="polyline.Id"/>
                break;
            case PrimitiveGroupViewModel primitiveGroup:
                <PrimitiveGroupView ViewModel="primitiveGroup" @key="primitiveGroup.Id"/>
                break;
        }
    }

</svg>